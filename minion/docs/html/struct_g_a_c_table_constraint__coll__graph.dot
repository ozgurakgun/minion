digraph G
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  rankdir=LR;
  Node1 [label="GACTableConstraint\< VarArray \>",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node2 [label="AbstractConstraint",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_abstract_constraint.html",tooltip="Base type from which all constraints are derived."];
  Node3 -> Node2 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="singleton_vars",fontname="FreeSans"];
  Node3 [label="std::vector\< AnyVarRef \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node4 -> Node3 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="elements",fontname="FreeSans"];
  Node4 [label="AnyVarRef",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_any_var_ref.html",tooltip="Provides a method of wrapping any variable type in a general wrapper."];
  Node5 -> Node4 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="data",fontname="FreeSans"];
  Node5 [label="shared_ptr\< AnyVarRef_Abstract \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node6 -> Node5 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="itsNext\nitsPrev",fontname="FreeSans"];
  Node6 [label="shared_ptr\< X \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node6 -> Node6 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="itsNext\nitsPrev",fontname="FreeSans"];
  Node7 -> Node5 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="itsPtr",fontname="FreeSans"];
  Node7 [label="AnyVarRef_Abstract",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_any_var_ref___abstract.html",tooltip="Internal type used by AnyVarRef."];
  Node6 -> Node5 [dir=back,color="orange",fontsize="10",style="dashed",label="\< AnyVarRef_Abstract \>",fontname="FreeSans"];
  Node8 -> Node3 [dir=back,color="orange",fontsize="10",style="dashed",label="\< AnyVarRef \>",fontname="FreeSans"];
  Node8 [label="std::vector\< T \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node9 -> Node8 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="elements",fontname="FreeSans"];
  Node9 [label="T",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node10 -> Node2 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="_DynamicTriggerCache",fontname="FreeSans"];
  Node10 [label="MoveablePointer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_moveable_pointer.html",tooltip="Class which represents a moveable pointer."];
  Node11 -> Node2 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="stateObj",fontname="FreeSans"];
  Node11 [label="StateObjNamespace_RELEASE::StateObj",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node12 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="tupleTrieArrayptr",fontname="FreeSans"];
  Node12 [label="TupleTrieArray",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node13 -> Node12 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="tupleTries",fontname="FreeSans"];
  Node13 [label="TupleTrie",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node14 -> Node13 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="initial_trie",fontname="FreeSans"];
  Node14 [label="std::vector\< EarlyTrieObj \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node15 -> Node14 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="elements",fontname="FreeSans"];
  Node15 [label="TupleTrie::TupleTrie::EarlyTrieObj",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node8 -> Node14 [dir=back,color="orange",fontsize="10",style="dashed",label="\< EarlyTrieObj \>",fontname="FreeSans"];
  Node16 -> Node13 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="tuples_vector",fontname="FreeSans"];
  Node16 [label="std::vector\< vector\< int \> \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node17 -> Node16 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="elements",fontname="FreeSans"];
  Node17 [label="std::vector\< int \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node8 -> Node17 [dir=back,color="orange",fontsize="10",style="dashed",label="\< int \>",fontname="FreeSans"];
  Node8 -> Node16 [dir=back,color="orange",fontsize="10",style="dashed",label="\< vector\< int \> \>",fontname="FreeSans"];
  Node18 -> Node13 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="trie_data",fontname="FreeSans"];
  Node18 [label="TrieObj",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node18 -> Node18 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="offset_ptr",fontname="FreeSans"];
  Node19 -> Node13 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="tuplelist",fontname="FreeSans"];
  Node19 [label="TupleList",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node16 -> Node19 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="_map_vars_to_literal",fontname="FreeSans"];
  Node12 -> Node19 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="triearray",fontname="FreeSans"];
  Node20 -> Node19 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="nightingale",fontname="FreeSans"];
  Node20 [label="Nightingale",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node21 -> Node20 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="tuplelistperlit\ntuplelist",fontname="FreeSans"];
  Node21 [label="TupleN",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node19 -> Node20 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="tuples",fontname="FreeSans"];
  Node22 -> Node19 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="litlists",fontname="FreeSans"];
  Node22 [label="LiteralSpecificLists",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_literal_specific_lists.html",tooltip="The first GACtable implementation."];
  Node23 -> Node22 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="literal_specific_tuples",fontname="FreeSans"];
  Node23 [label="std::vector\< vector\< vector\< int \> \> \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node16 -> Node23 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="elements",fontname="FreeSans"];
  Node8 -> Node23 [dir=back,color="orange",fontsize="10",style="dashed",label="\< vector\< vector\< int \> \> \>",fontname="FreeSans"];
  Node19 -> Node22 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="tuples",fontname="FreeSans"];
  Node24 -> Node19 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="regin",fontname="FreeSans"];
  Node24 [label="Regin",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node25 -> Node24 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="tuplelist",fontname="FreeSans"];
  Node25 [label="TupleH",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node19 -> Node24 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="tupleList",fontname="FreeSans"];
  Node17 -> Node19 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="dom_size\ndom_smallest",fontname="FreeSans"];
  Node26 -> Node19 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="_map_literal_to_vars",fontname="FreeSans"];
  Node26 [label="std::vector\< pair\< int, int \> \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node8 -> Node26 [dir=back,color="orange",fontsize="10",style="dashed",label="\< pair\< int, int \> \>",fontname="FreeSans"];
  Node19 -> Node12 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="tuplelist",fontname="FreeSans"];
  Node20 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="nightingale",fontname="FreeSans"];
  Node22 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="lists",fontname="FreeSans"];
  Node24 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="regin",fontname="FreeSans"];
  Node27 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="current_support",fontname="FreeSans"];
  Node27 [label="Reversible\< int \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_reversible.html"];
  Node10 -> Node27 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="backtrack_ptr",fontname="FreeSans"];
  Node28 -> Node27 [dir=back,color="orange",fontsize="10",style="dashed",label="\< int \>",fontname="FreeSans"];
  Node28 [label="Reversible\< Type \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_reversible.html",tooltip="Provides a wrapper around a single backtrackable value."];
  Node10 -> Node28 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="backtrack_ptr",fontname="FreeSans"];
  Node10 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="_current_support",fontname="FreeSans"];
  Node17 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="offset",fontname="FreeSans"];
  Node29 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="trie_current_support",fontname="FreeSans"];
  Node29 [label="std::vector\< TrieObj ** \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node18 -> Node29 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="elements",fontname="FreeSans"];
  Node8 -> Node29 [dir=back,color="orange",fontsize="10",style="dashed",label="\< TrieObj ** \>",fontname="FreeSans"];
  Node19 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="tupleList\ntuples",fontname="FreeSans"];
}
