#TEST SOLCOUNT 0
# Minion Quasigroup Instance
# Kind: QG7 Size: 6
# Idempotent
# CSPLib Problem prob003
#    http://www.csplib.org
# Idempotency Constraints
# Result variables are (b*a)*b and should be = a*(b*a)
# Symmetry Breaking Constraints
#
# Minion Constraint Solver Input
#    http://sourceforge.net/projects/minion
# Instance created using CLisp generator written by Ian Gent
# Instance created at 18:08 on 29 Mar 2006
# Minion Version 1.8
# HG version: "a54d2c66612b"
# HG last changed date: "2015-06-12 14:48 +0100"
#  Run at: UTC Fri Aug 14 19:35:26 2015

#    http://minion.sourceforge.net
# If you have problems with Minion or find any bugs, please tell us!
# Mailing list at: https://mailman.cs.st-andrews.ac.uk/mailman/listinfo/mug
# Input filename: test_gacelement_1.minion
# Command line: minion -redump test_gacelement_1.minion 
MINION 3
**VARIABLES**
DISCRETE x0{0..5}
DISCRETE x1{0..5}
DISCRETE x2{0..5}
DISCRETE x3{0..5}
DISCRETE x4{0..5}
DISCRETE x5{0..5}
DISCRETE x6{0..5}
DISCRETE x7{0..5}
DISCRETE x8{0..5}
DISCRETE x9{0..5}
DISCRETE x10{0..5}
DISCRETE x11{0..5}
DISCRETE x12{0..5}
DISCRETE x13{0..5}
DISCRETE x14{0..5}
DISCRETE x15{0..5}
DISCRETE x16{0..5}
DISCRETE x17{0..5}
DISCRETE x18{0..5}
DISCRETE x19{0..5}
DISCRETE x20{0..5}
DISCRETE x21{0..5}
DISCRETE x22{0..5}
DISCRETE x23{0..5}
DISCRETE x24{0..5}
DISCRETE x25{0..5}
DISCRETE x26{0..5}
DISCRETE x27{0..5}
DISCRETE x28{0..5}
DISCRETE x29{0..5}
DISCRETE x30{0..5}
DISCRETE x31{0..5}
DISCRETE x32{0..5}
DISCRETE x33{0..5}
DISCRETE x34{0..5}
DISCRETE x35{0..5}
DISCRETE x36{0..5}
DISCRETE x37{0..5}
DISCRETE x38{0..5}
DISCRETE x39{0..5}
DISCRETE x40{0..5}
DISCRETE x41{0..5}
DISCRETE x42{0..5}
DISCRETE x43{0..5}
DISCRETE x44{0..5}
DISCRETE x45{0..5}
DISCRETE x46{0..5}
DISCRETE x47{0..5}
DISCRETE x48{0..5}
DISCRETE x49{0..5}
DISCRETE x50{0..5}
DISCRETE x51{0..5}
DISCRETE x52{0..5}
DISCRETE x53{0..5}
DISCRETE x54{0..5}
DISCRETE x55{0..5}
DISCRETE x56{0..5}
DISCRETE x57{0..5}
DISCRETE x58{0..5}
DISCRETE x59{0..5}
DISCRETE x60{0..5}
DISCRETE x61{0..5}
DISCRETE x62{0..5}
DISCRETE x63{0..5}
DISCRETE x64{0..5}
DISCRETE x65{0..5}
DISCRETE x66{0..5}
DISCRETE x67{0..5}
DISCRETE x68{0..5}
DISCRETE x69{0..5}
DISCRETE x70{0..5}
DISCRETE x71{0..5}
**SEARCH**
VARORDER [x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71]
VALORDER [a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a]
SYMORDER [x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71]
PRINT[[x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71]]
**TUPLELIST**
**CONSTRAINTS**
alldiff([x0,x6,x12,x18,x24,x30])
alldiff([x0,x1,x2,x3,x4,x5])
alldiff([x1,x7,x13,x19,x25,x31])
alldiff([x6,x7,x8,x9,x10,x11])
alldiff([x2,x8,x14,x20,x26,x32])
alldiff([x12,x13,x14,x15,x16,x17])
alldiff([x3,x9,x15,x21,x27,x33])
alldiff([x18,x19,x20,x21,x22,x23])
alldiff([x4,x10,x16,x22,x28,x34])
alldiff([x24,x25,x26,x27,x28,x29])
alldiff([x5,x11,x17,x23,x29,x35])
alldiff([x30,x31,x32,x33,x34,x35])
eq(x0, 0)
eq(x7, 1)
eq(x14, 2)
eq(x21, 3)
eq(x28, 4)
eq(x35, 5)
element([x0,x6,x12,x18,x24,x30], x0, x36)
element([x0,x1,x2,x3,x4,x5], x0, x36)
element([x1,x7,x13,x19,x25,x31], x6, x37)
element([x0,x1,x2,x3,x4,x5], x6, x37)
element([x2,x8,x14,x20,x26,x32], x12, x38)
element([x0,x1,x2,x3,x4,x5], x12, x38)
element([x3,x9,x15,x21,x27,x33], x18, x39)
element([x0,x1,x2,x3,x4,x5], x18, x39)
element([x4,x10,x16,x22,x28,x34], x24, x40)
element([x0,x1,x2,x3,x4,x5], x24, x40)
element([x5,x11,x17,x23,x29,x35], x30, x41)
element([x0,x1,x2,x3,x4,x5], x30, x41)
element([x0,x6,x12,x18,x24,x30], x1, x42)
element([x6,x7,x8,x9,x10,x11], x1, x42)
element([x1,x7,x13,x19,x25,x31], x7, x43)
element([x6,x7,x8,x9,x10,x11], x7, x43)
element([x2,x8,x14,x20,x26,x32], x13, x44)
element([x6,x7,x8,x9,x10,x11], x13, x44)
element([x3,x9,x15,x21,x27,x33], x19, x45)
element([x6,x7,x8,x9,x10,x11], x19, x45)
element([x4,x10,x16,x22,x28,x34], x25, x46)
element([x6,x7,x8,x9,x10,x11], x25, x46)
element([x5,x11,x17,x23,x29,x35], x31, x47)
element([x6,x7,x8,x9,x10,x11], x31, x47)
element([x0,x6,x12,x18,x24,x30], x2, x48)
element([x12,x13,x14,x15,x16,x17], x2, x48)
element([x1,x7,x13,x19,x25,x31], x8, x49)
element([x12,x13,x14,x15,x16,x17], x8, x49)
element([x2,x8,x14,x20,x26,x32], x14, x50)
element([x12,x13,x14,x15,x16,x17], x14, x50)
element([x3,x9,x15,x21,x27,x33], x20, x51)
element([x12,x13,x14,x15,x16,x17], x20, x51)
element([x4,x10,x16,x22,x28,x34], x26, x52)
element([x12,x13,x14,x15,x16,x17], x26, x52)
element([x5,x11,x17,x23,x29,x35], x32, x53)
element([x12,x13,x14,x15,x16,x17], x32, x53)
element([x0,x6,x12,x18,x24,x30], x3, x54)
element([x18,x19,x20,x21,x22,x23], x3, x54)
element([x1,x7,x13,x19,x25,x31], x9, x55)
element([x18,x19,x20,x21,x22,x23], x9, x55)
element([x2,x8,x14,x20,x26,x32], x15, x56)
element([x18,x19,x20,x21,x22,x23], x15, x56)
element([x3,x9,x15,x21,x27,x33], x21, x57)
element([x18,x19,x20,x21,x22,x23], x21, x57)
element([x4,x10,x16,x22,x28,x34], x27, x58)
element([x18,x19,x20,x21,x22,x23], x27, x58)
element([x5,x11,x17,x23,x29,x35], x33, x59)
element([x18,x19,x20,x21,x22,x23], x33, x59)
element([x0,x6,x12,x18,x24,x30], x4, x60)
element([x24,x25,x26,x27,x28,x29], x4, x60)
element([x1,x7,x13,x19,x25,x31], x10, x61)
element([x24,x25,x26,x27,x28,x29], x10, x61)
element([x2,x8,x14,x20,x26,x32], x16, x62)
element([x24,x25,x26,x27,x28,x29], x16, x62)
element([x3,x9,x15,x21,x27,x33], x22, x63)
element([x24,x25,x26,x27,x28,x29], x22, x63)
element([x4,x10,x16,x22,x28,x34], x28, x64)
element([x24,x25,x26,x27,x28,x29], x28, x64)
element([x5,x11,x17,x23,x29,x35], x34, x65)
element([x24,x25,x26,x27,x28,x29], x34, x65)
element([x0,x6,x12,x18,x24,x30], x5, x66)
element([x30,x31,x32,x33,x34,x35], x5, x66)
element([x1,x7,x13,x19,x25,x31], x11, x67)
element([x30,x31,x32,x33,x34,x35], x11, x67)
element([x2,x8,x14,x20,x26,x32], x17, x68)
element([x30,x31,x32,x33,x34,x35], x17, x68)
element([x3,x9,x15,x21,x27,x33], x23, x69)
element([x30,x31,x32,x33,x34,x35], x23, x69)
element([x4,x10,x16,x22,x28,x34], x29, x70)
element([x30,x31,x32,x33,x34,x35], x29, x70)
element([x5,x11,x17,x23,x29,x35], x35, x71)
element([x30,x31,x32,x33,x34,x35], x35, x71)
ineq(0, x5, 2)
ineq(1, x11, 2)
ineq(2, x17, 2)
ineq(3, x23, 2)
ineq(4, x29, 2)
ineq(5, x35, 2)
**EOF**
